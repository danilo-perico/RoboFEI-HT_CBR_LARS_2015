#include <dynamixel.h>

#define VEL 200 // Define a velocidade

//------ Posição dos servos para o robo em pé --------------------
const unsigned int StandupPos[22] = {304, 594, //01 , 02, (cabeça)
                                     478, 304, 409, //03, 04, 05, (braço direito)
                                     546, 650, 609, //06, 07, 08, (braço esquerdo)
                                     573, 835, //09, 10, (torso)
                                     613, 534, 501, 508, 492, 559, //11, 12, 13, 14, 15, 16 (perna direita)
                                     590, 509, 514, 506, 510, 461}; //17, 18, 19, 20, 21, 22 (perna esquerda)
//----------------------------------------------------------------

register unsigned int i;

//================================================================================
//---- Função que verifica se algum servo está em movimento exceto a cabeça-------
void espera_mov()
{
    for(i=3;i<23;i++)
    {
       do 
       {
          usleep(2000); //Espera 2 milisegundos evitando uso excessivo do processador
       }while(dxl_read_byte( i, P_MOVING ) != 0);
    }
}
//================================================================================

/*void espera_mov(){
    int Moving;
    for(i=3;i<23;i++){
    do {
     usleep(2000);
        Moving = dxl_read_byte( i, P_MOVING );
        } while(Moving != 0);
    }
}*/

//================================================================================
//---- Posiciona o robô na posição em pé------------------------------------------
void robo_ereto()
{
    for(i = 1;i<23;i++)
    {
       dxl_write_word(i, MOVING_SPEED, 100);
       dxl_write_word(i, P_GOAL_POSITION_L, StandupPos[i-1]);
    }
}
//================================================================================


//================================================================================
//---- Chuta com o pé direito ----------------------------------------------------
void chutar_reto_direita()
{
    printf("Chutando com a perna direita\n");
    for(i = 1;i<23;i++)
       dxl_write_word(i, MOVING_SPEED, 25);

    //--------------inclina esquerda--------------

    dxl_write_word(13, P_GOAL_POSITION_L, 454);
    dxl_write_word(19, P_GOAL_POSITION_L, 467);

    dxl_write_word(21, P_GOAL_POSITION_L, 446);
    dxl_write_word(15, P_GOAL_POSITION_L, 426);

    dxl_write_word(3, MOVING_SPEED, 50);
    dxl_write_word(3, P_GOAL_POSITION_L, 456);
    dxl_write_word(4, MOVING_SPEED, 50);
    dxl_write_word(4, P_GOAL_POSITION_L, 469);
    dxl_write_word(5, MOVING_SPEED, 50);
    dxl_write_word(5, P_GOAL_POSITION_L, 572);
    //-------------------------------------------

    //-----------tira pe direito do chao---------
    for(i = 1;i<23;i++)
        dxl_write_word(i, MOVING_SPEED, 60);

    espera_mov();
    dxl_write_word(16, P_GOAL_POSITION_L, 646);
    dxl_write_word(14, P_GOAL_POSITION_L, 600);
    dxl_write_word(21, P_GOAL_POSITION_L, 439);
    dxl_write_word(22, P_GOAL_POSITION_L, 459);

    //-------------------------------------------

    for(i = 1;i<23;i++)
        dxl_write_word(i, MOVING_SPEED, 100);
    //--------levanta o pe direito para chute----
    espera_mov();
    dxl_write_word(16, P_GOAL_POSITION_L, 678);
    dxl_write_word(14, P_GOAL_POSITION_L, 636);
    dxl_write_word(12, P_GOAL_POSITION_L, 472);
    dxl_write_word(22, P_GOAL_POSITION_L, 461);
    //-------------------------------------------

    //-------corrigi posicao pe direito----------
    espera_mov();
    //dxl_write_word(16, P_GOAL_POSITION_L, 640);
     //dxl_write_word(8, MOVING_SPEED, 100);
     dxl_write_word(8, P_GOAL_POSITION_L, 700);
    //-------------------------------------------


    //----------chuta com pe direito-----------
    espera_mov();
    for(i = 1;i<23;i++)
        dxl_write_word(i, MOVING_SPEED, 200);
    dxl_write_word(12, P_GOAL_POSITION_L, 375);
    dxl_write_word(16, P_GOAL_POSITION_L, 530);
    dxl_write_word(18, P_GOAL_POSITION_L, 493);
    dxl_write_word(22, P_GOAL_POSITION_L, 456);
    dxl_write_word(8, P_GOAL_POSITION_L, 750);
    dxl_write_word(5, MOVING_SPEED, 300);
    dxl_write_word(5, P_GOAL_POSITION_L, 350);
    dxl_write_word(4, P_GOAL_POSITION_L, 550);
    //------------------------------------------

    //--------volta a perna direita--------------
    espera_mov();
    dxl_write_word(16, P_GOAL_POSITION_L, 678);
    dxl_write_word(14, P_GOAL_POSITION_L, 636);
    dxl_write_word(12, P_GOAL_POSITION_L, 472);
    dxl_write_word(18, P_GOAL_POSITION_L, 509);
    //dxl_write_word(8, P_GOAL_POSITION_L, 609);
    dxl_write_word(5, MOVING_SPEED, 200);
    dxl_write_word(5, P_GOAL_POSITION_L, 572);
    dxl_write_word(13, P_GOAL_POSITION_L, 446);
    //dxl_write_word(22, P_GOAL_POSITION_L, 461);
    //------------------------------------------

    //--------volta braço esquerdo--------------
    espera_mov();
    dxl_write_word(8, MOVING_SPEED, 100);
    dxl_write_word(8, P_GOAL_POSITION_L, 650);
    //-----------------------------------------

    //-------corrigi perna direita------------
    espera_mov();
    dxl_write_word(16, P_GOAL_POSITION_L, 600);
    dxl_write_word(14, P_GOAL_POSITION_L, 600);
    dxl_write_word(21, P_GOAL_POSITION_L, 439);
    //-----------------------------------------
    espera_mov();

    //-----volta perna direita----------------
int Pos[22] = {304, 594, 456, 469, 572, 546, 674, 609, 573, 835, 613, 534, 430, 508, 426, 559, 590, 509, 467, 506, 444, 461};
//int i;
for(i = 1;i<23;i++){
    dxl_write_word(i, MOVING_SPEED, 35);
    dxl_write_word(i, P_GOAL_POSITION_L, Pos[i-1]);
}

//-------volta posicao inicial-----------
   espera_mov();
   robo_ereto();
//---------------------------------------
}
//================================================================================


//================================================================================
//---- Função que trava todos os servos ------------------------------------------
void travar_servos()
{
    for(i = 1;i<23;i++)
         dxl_write_word(i, 24, 1);
}
//================================================================================

//================================================================================
//---- Função que levanta o robô que esteja no chão  -----------------------------
//---- com as costas para cima e peito no chão       -----------------------------
void levantar(){
printf("Levantando\n");
    for(i = 1;i<23;i++)
    	dxl_write_word(i, MOVING_SPEED, 100);
	dxl_write_word(14, P_GOAL_POSITION_L, 850);
	dxl_write_word(20, P_GOAL_POSITION_L, 171);
	dxl_write_word(4, P_GOAL_POSITION_L, 854);
	dxl_write_word(7, P_GOAL_POSITION_L, 150);
	dxl_write_word(3, P_GOAL_POSITION_L, 268);
	dxl_write_word(6, P_GOAL_POSITION_L, 750);
	dxl_write_word(16, P_GOAL_POSITION_L, 722);
	dxl_write_word(22, P_GOAL_POSITION_L, 247);
	dxl_write_word(5, P_GOAL_POSITION_L, 0);
	dxl_write_word(8, P_GOAL_POSITION_L, 1023);

	espera_mov();

	dxl_write_word(12, P_GOAL_POSITION_L, 232);
	dxl_write_word(18, P_GOAL_POSITION_L, 795);

	espera_mov();
	dxl_write_word(12, P_GOAL_POSITION_L, 159);
	dxl_write_word(18, P_GOAL_POSITION_L, 870);
	dxl_write_word(14, P_GOAL_POSITION_L, 884);
	dxl_write_word(20, P_GOAL_POSITION_L, 152);

	espera_mov();
	dxl_write_word(6, MOVING_SPEED, 1000);
	dxl_write_word(6, P_GOAL_POSITION_L, 432);
	dxl_write_word(3, MOVING_SPEED, 1000);
	dxl_write_word(3, P_GOAL_POSITION_L, 583);
//dxl_write_word(12, P_GOAL_POSITION_L, 100);
//dxl_write_word(18, P_GOAL_POSITION_L, 929);


	espera_mov();
	dxl_write_word(10, MOVING_SPEED, 300);
	dxl_write_word(10, P_GOAL_POSITION_L, 710);
	dxl_write_word(22, P_GOAL_POSITION_L, 416);
	dxl_write_word(16, P_GOAL_POSITION_L, 631);

	espera_mov();
	dxl_write_word(16, MOVING_SPEED, 50);
	dxl_write_word(12, MOVING_SPEED, 50);
	dxl_write_word(18, MOVING_SPEED, 50);
	dxl_write_word(22, MOVING_SPEED, 50);
	dxl_write_word(12, P_GOAL_POSITION_L, 159);
	dxl_write_word(18, P_GOAL_POSITION_L, 870);
	dxl_write_word(22, P_GOAL_POSITION_L, 461);
	dxl_write_word(16, P_GOAL_POSITION_L, 559);
	dxl_write_word(20, P_GOAL_POSITION_L, 127);
	dxl_write_word(14, P_GOAL_POSITION_L, 908);

	espera_mov();
	dxl_write_word(20, P_GOAL_POSITION_L, 157);
	dxl_write_word(14, P_GOAL_POSITION_L, 878);
	dxl_write_word(12, P_GOAL_POSITION_L, 189);
	dxl_write_word(18, P_GOAL_POSITION_L, 840);

	//espera_mov();
	dxl_write_word(5, MOVING_SPEED, 100);
	dxl_write_word(8, MOVING_SPEED, 100);
	dxl_write_word(4, MOVING_SPEED, 100);
	dxl_write_word(7, MOVING_SPEED, 100);
	dxl_write_word(5, P_GOAL_POSITION_L, 480);
	dxl_write_word(8, P_GOAL_POSITION_L, 542);
	dxl_write_word(4, P_GOAL_POSITION_L, 304);
	dxl_write_word(7, P_GOAL_POSITION_L, 674);

	espera_mov();

	dxl_write_word(16, MOVING_SPEED, 20);
	dxl_write_word(22, MOVING_SPEED, 20);
	dxl_write_word(20, P_GOAL_POSITION_L, 257);
	dxl_write_word(14, P_GOAL_POSITION_L, 778);
	dxl_write_word(12, P_GOAL_POSITION_L, 289);
	dxl_write_word(18, P_GOAL_POSITION_L, 740);
	dxl_write_word(16, P_GOAL_POSITION_L, 609);
	dxl_write_word(22, P_GOAL_POSITION_L, 411);

	espera_mov();
	dxl_write_word(18, MOVING_SPEED, 50);
	dxl_write_word(12, MOVING_SPEED, 50);
	dxl_write_word(16, P_GOAL_POSITION_L, 740);
	dxl_write_word(22, P_GOAL_POSITION_L, 295);
	dxl_write_word(18, P_GOAL_POSITION_L, 457);
	dxl_write_word(12, P_GOAL_POSITION_L, 573);

	//usleep(5000000);

	espera_mov();
	dxl_write_word(14, MOVING_SPEED, VEL*0.24);
	dxl_write_word(20, MOVING_SPEED, VEL*0.24);
	dxl_write_word(12, MOVING_SPEED, VEL*0.48);
	dxl_write_word(18, MOVING_SPEED, VEL*0.48);
	dxl_write_word(10, MOVING_SPEED, VEL*0.55);
	dxl_write_word(14, P_GOAL_POSITION_L, 748);
	dxl_write_word(20, P_GOAL_POSITION_L, 287);
	dxl_write_word(18, P_GOAL_POSITION_L, 517);
	dxl_write_word(12, P_GOAL_POSITION_L, 513);
	dxl_write_word(10, P_GOAL_POSITION_L, 835);

	//usleep(5000000);

	espera_mov();
	dxl_write_word(14, MOVING_SPEED, VEL*1.1);
	dxl_write_word(20, MOVING_SPEED, VEL*1.1);
	dxl_write_word(16, MOVING_SPEED, VEL*0.804);
	dxl_write_word(22, MOVING_SPEED, VEL*0.745);
	dxl_write_word(12, MOVING_SPEED, VEL*0.087);
	dxl_write_word(18, MOVING_SPEED, VEL*0.033);

	for(i = 1;i<23;i++)
    	    dxl_write_word(i, P_GOAL_POSITION_L, StandupPos[i-1]);

}
//================================================================================

//================================================================================
//---- Função que faz o robo caminhar --------------------------------------------
void andar_reto()
{
    //////perna direita levanta /////////////////////////
    dxl_write_word(19, MOVING_SPEED, 580);
    dxl_write_word(19, P_GOAL_POSITION_L, 524);

    dxl_write_word(21, MOVING_SPEED, 580);
    dxl_write_word(21, P_GOAL_POSITION_L, 520);

    dxl_write_word(13, MOVING_SPEED, 580);
    dxl_write_word(13, P_GOAL_POSITION_L, 501);

    dxl_write_word(15, MOVING_SPEED, 580);
    dxl_write_word(15, P_GOAL_POSITION_L, 492);

    dxl_write_word(12, MOVING_SPEED, 580);
    dxl_write_word(12, P_GOAL_POSITION_L, 466);
    dxl_write_word(14, MOVING_SPEED, 1000);
    dxl_write_word(14, P_GOAL_POSITION_L, 617);
    dxl_write_word(16, MOVING_SPEED, 580);
    dxl_write_word(16, P_GOAL_POSITION_L, 632);
    dxl_write_word(5, MOVING_SPEED, 1000);
    dxl_write_word(5, P_GOAL_POSITION_L, 365);
    dxl_write_word(8, MOVING_SPEED, 1000);
    dxl_write_word(8, P_GOAL_POSITION_L, 570);
    usleep(100000);

    //////////// perna direira abaixa///////////////
    dxl_write_word(12, P_GOAL_POSITION_L, 531);
    dxl_write_word(14, P_GOAL_POSITION_L, 505);
    dxl_write_word(16, P_GOAL_POSITION_L, 567);
    usleep(100000);

    //////////perna esquerda levanta///////////////
    dxl_write_word(18, MOVING_SPEED, 580);
    dxl_write_word(18, P_GOAL_POSITION_L, 574);
    dxl_write_word(20, MOVING_SPEED, 1000);
    dxl_write_word(20, P_GOAL_POSITION_L, 394);
    dxl_write_word(22, MOVING_SPEED, 580);
    dxl_write_word(22, P_GOAL_POSITION_L, 396);
    dxl_write_word(8, MOVING_SPEED, 1000);
    dxl_write_word(8, P_GOAL_POSITION_L, 670);
    dxl_write_word(5, MOVING_SPEED, 1000);
    dxl_write_word(5, P_GOAL_POSITION_L, 465);

    dxl_write_word(19, MOVING_SPEED, 580);
    dxl_write_word(19, P_GOAL_POSITION_L, 514);

    dxl_write_word(21, MOVING_SPEED, 580);
    dxl_write_word(21, P_GOAL_POSITION_L, 510);

    dxl_write_word(13, MOVING_SPEED, 580);
    dxl_write_word(13, P_GOAL_POSITION_L, 491);

    dxl_write_word(15, MOVING_SPEED, 580);
    dxl_write_word(15, P_GOAL_POSITION_L, 482);

    ////PERNA ESQUERDA ABAIXA///////////////////
     usleep(100000);
    dxl_write_word(18, P_GOAL_POSITION_L, 509);
    dxl_write_word(20, P_GOAL_POSITION_L, 506);
    dxl_write_word(22, P_GOAL_POSITION_L, 461);
    usleep(100000);

}
//================================================================================


//================================================================================
//---- Função que faz o robô levantar-se se estiver no chão  ---------------------
//---- com o peito para cima e as costas no chão             ---------------------
void virar_de_costas_deitado(){
    for(i = 1;i<23;i++)
    dxl_write_word(i, MOVING_SPEED, 200);

    dxl_write_word(8, P_GOAL_POSITION_L, 400);
    dxl_write_word(7, P_GOAL_POSITION_L, 150);
    dxl_write_word(5, P_GOAL_POSITION_L, 930);
    dxl_write_word(4, P_GOAL_POSITION_L, 222);
    espera_mov();
    dxl_write_word(5, P_GOAL_POSITION_L, 1014);
    dxl_write_word(4, P_GOAL_POSITION_L, 140);
    dxl_write_word(9, P_GOAL_POSITION_L, 775);
    dxl_write_word(18, P_GOAL_POSITION_L, 773);
    dxl_write_word(12, P_GOAL_POSITION_L, 702);
    espera_mov();
    dxl_write_word(7, P_GOAL_POSITION_L, 650);
    //usleep(500000);
    dxl_write_word(9, P_GOAL_POSITION_L, 600);
    espera_mov();
    dxl_write_word(18, P_GOAL_POSITION_L, 451);
    dxl_write_word(12, P_GOAL_POSITION_L, 600);
    dxl_write_word(8, P_GOAL_POSITION_L, 694);
    dxl_write_word(4, MOVING_SPEED, 400);
    dxl_write_word(5, MOVING_SPEED, 400);
    espera_mov();
    dxl_write_word(4, P_GOAL_POSITION_L, 521);
    espera_mov();
    dxl_write_word(5, P_GOAL_POSITION_L, 293);
    dxl_write_word(9, P_GOAL_POSITION_L, 573);

    levantar();
}
//================================================================================


//================================================================================
//---- Realiza um tempo de espera enquanto o motor estiver em movimento ----------
void Delay_mov(unsigned int delta_posicao, unsigned int velocidade)
{
unsigned int delay; // tempo total para percorrer caminho informado
 
// 538.421 tempo em segundos que o servo leva par completar uma volta na velocidade 1
// 1228.8 definição de 1 volta completa -> pq 1023 = 300° portanto 1228.8 = 360°
delay = ((538.421/velocidade)*delta_posicao)/1228.8; 

usleep(delay*1000000*0.9);

}



